version: '3.8'
services:
  validation-service:
    build:
      context: .
      dockerfile: Dockerfile.service
    ports:
      - "8443:8443" # TLS port
      - "8080:8080" # Non-TLS port for backward compatibility in dev
      - "8081:8081" # Dedicated health check port
    volumes:
      - ./config/config.json:/app/config/config.json
      - ./certs/ca/ca.crt:/app/certs/ca.crt
      - ./certs/validation-service/validation-service.crt:/app/certs/server.crt
      - ./certs/validation-service/validation-service.key:/app/certs/server.key
    environment:
      - GIN_MODE=release
      - PORT=8443
      - HEALTH_PORT=8081
      - TLS_ENABLED=true
      - TLS_CERT_FILE=/app/certs/server.crt
      - TLS_KEY_FILE=/app/certs/server.key
      - MTLS_ENABLED=true
      - CA_CERT_FILE=/app/certs/ca.crt
      # API key for service-to-service authentication
      - API_KEY=${VALIDATION_API_KEY:-default-development-key-do-not-use-in-production}
      # Database connection
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=secretsuser
      - DB_PASSWORD=secretspass
      - DB_NAME=secretsdb
    depends_on:
      - postgres
    networks:
      - secret-validator-network

  github-app:
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - "3000:8080"
    volumes:
      - ./config/config.json:/app/config/config.json
      - ./keys:/app/keys
      - ./certs/ca/ca.crt:/app/certs/ca.crt
      - ./certs/github-app/github-app.crt:/app/certs/client.crt
      - ./certs/github-app/github-app.key:/app/certs/client.key
    environment:
      - APP_ENV=development
      - LOG_LEVEL=debug
      # Use HTTPS for validation service
      - VALIDATION_SERVICE_URL=validation-service:8443
      - VALIDATION_API_KEY=${VALIDATION_API_KEY:-default-development-key-do-not-use-in-production}
      # TLS configuration for client
      - TLS_SKIP_VERIFY=false
      - MTLS_ENABLED=true
      - TLS_CLIENT_CERT_FILE=/app/certs/client.crt
      - TLS_CLIENT_KEY_FILE=/app/certs/client.key
      - CA_CERT_FILE=/app/certs/ca.crt
      # GitHub app credentials
      - GITHUB_APP_ID=${GITHUB_APP_ID:-12345}
      - GITHUB_INSTALLATION_ID=${GITHUB_INSTALLATION_ID:-67890}
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET:-development_webhook_secret_123}
      - TEST_MODE=${TEST_MODE:-false}
      - FULL_FILE_ANALYSIS=${FULL_FILE_ANALYSIS:-false}
      - MOCK_FILES_MODE=${MOCK_FILES_MODE:-false}
      # Database connection
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=secretsuser
      - DB_PASSWORD=secretspass
      - DB_NAME=secretsdb
    depends_on:
      - validation-service
      - postgres
    networks:
      - secret-validator-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=secretsuser
      - POSTGRES_PASSWORD=secretspass
      - POSTGRES_DB=secretsdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - secret-validator-network

  grafana:
    build:
      context: .
      dockerfile: Dockerfile.grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=5s
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - postgres
    networks:
      - secret-validator-network

volumes:
  postgres_data:
  grafana_data:

networks:
  secret-validator-network:
    driver: bridge